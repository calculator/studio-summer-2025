---
// src/pages/experiments.astro
import { getCollection } from 'astro:content';

// Get all experiments
const experiments = await getCollection('experiments');

// Sort by start date (newest first)
const sortedExperiments = experiments.sort((a, b) => 
  new Date(b.data.startDate).getTime() - new Date(a.data.startDate).getTime()
);
---

<html lang="en">
<head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Experiments Dashboard</title>
    <style>
        body {
            font-family: system-ui, -apple-system, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 2rem;
            line-height: 1.6;
        }
        .experiment-card {
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            background: #fafafa;
        }
        .status {
            display: inline-block;
            padding: 0.25rem 0.75rem;
            border-radius: 4px;
            font-size: 0.875rem;
            font-weight: 500;
            text-transform: capitalize;
        }
        .status.seedling { background: #e8f5e8; color: #2d5016; }
        .status.growing { background: #fff3cd; color: #856404; }
        .status.mature { background: #d4edda; color: #155724; }
        .status.harvested { background: #d1ecf1; color: #0c5460; }
        .status.dormant { background: #f8d7da; color: #721c24; }
        .experiment-meta {
            color: #666;
            font-size: 0.9rem;
            margin: 0.5rem 0;
        }
        .tags {
            margin-top: 1rem;
        }
        .tag {
            display: inline-block;
            background: #e9ecef;
            color: #495057;
            padding: 0.25rem 0.5rem;
            border-radius: 3px;
            font-size: 0.8rem;
            margin-right: 0.5rem;
        }
    </style>
</head>
<body>
    <h1>Experiments Dashboard</h1>
    <p>Active experiments: {sortedExperiments.filter(exp => exp.data.status !== 'dormant' && exp.data.status !== 'harvested').length}</p>
    
    {sortedExperiments.length === 0 ? (
        <p>No experiments yet. Create your first experiment in Obsidian!</p>
    ) : (
        <div class="experiments-grid">
            {sortedExperiments.map((experiment) => (
                <div class="experiment-card">
                    <h2>
                        <a href={`/experiments/${experiment.slug}`}>
                            {experiment.data.title}
                        </a>
                    </h2>
                    
                    <div class="experiment-meta">
                        <span class={`status ${experiment.data.status}`}>
                            {experiment.data.status}
                        </span>
                        <span> • Started: {experiment.data.startDate.toLocaleDateString()}</span>
                        {experiment.data.communicationMedium && (
                            <span> • Medium: {experiment.data.communicationMedium}</span>
                        )}
                    </div>
                    
                    {experiment.data.description && (
                        <p>{experiment.data.description}</p>
                    )}
                    
                    {experiment.data.tags && experiment.data.tags.length > 0 && (
                        <div class="tags">
                            {experiment.data.tags.map((tag) => (
                                <span class="tag">{tag}</span>
                            ))}
                        </div>
                    )}
                </div>
            ))}
        </div>
    )}
</body>
</html>