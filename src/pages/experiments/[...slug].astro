---
// src/pages/experiments/[...slug].astro
import { getCollection, type CollectionEntry } from 'astro:content';
import type { GetStaticPaths } from 'astro';

export const getStaticPaths: GetStaticPaths = async () => {
  const experiments = await getCollection('experiments');
  return experiments.map((experiment) => ({
    params: { slug: experiment.slug },
    props: { experiment },
  }));
};

interface Props {
  experiment: CollectionEntry<'experiments'>;
}

const { experiment } = Astro.props as Props;
const { Content } = await experiment.render();

// Format the date nicely
const formatDate = (date: Date) => {
  return date.toLocaleDateString('en-US', { 
    year: 'numeric', 
    month: 'long', 
    day: 'numeric' 
  });
};
---

<html lang="en">
<head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{experiment.data.title} - Experiment</title>
    <style>
        body {
            font-family: system-ui, sans-serif;
            max-width: 600px;
            margin: 0 auto;
            padding: 2rem;
            line-height: 1.5;
        }
        .back {
            color: #666;
            text-decoration: none;
        }
        .back:hover {
            text-decoration: underline;
        }
        .meta {
            font-size: 0.9rem;
            color: #666;
            margin: 0.5rem 0 2rem 0;
        }
    </style>
</head>
<body>
    <a href="/" class="back">← Home</a>
    
    {experiment.data.status && experiment.data.startDate && (
        <div class="meta">
            {experiment.data.status} • {formatDate(experiment.data.startDate)}
        </div>
    )}
    
    <Content />
</body>
</html> 